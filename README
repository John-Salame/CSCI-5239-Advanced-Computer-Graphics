# Advanced Computer Graphics Final Project
John Salame
CSCI 5239 Spring 2023

## GitHub Repo
https://github.com/John-Salame/CSCI-5239-Advanced-Computer-Graphics

## Time taken
Final Project Total:
26.5 hours

Time Breakdown:
After turning in homework 9, I worked for 8 more hours to fix the bugs with firefly rendering and spark positions.  
* I also attempted to improve the particle lifecycle by re-initializing the particle (reincarnating) after its lifetime reaches the lifespan.
* Figured out how the Perlin Noise works (x, y, z, w are values that become more fine-grained with double the frequency and half the amplitude as the previous dimension)
* Figured out that Perlin Noise sucks for determining my grass heights; the heights don't vary much. Maybe the spacing of the grass correlates with some frequency.
* * Reverted back to randomizing grass heights at the time the VBO is created.

I then spent 7 more hours on the assignment.
* Made the velocities of the sparks more extreme by creating the extremeRand function in spark.cs.
* I spent a long time trying to derive a closed form for the spark trajectory including gravity.
* * I could not figure it out with calculus. Maybe I kept making mistakes. I decided to just use the method Vlakkies mentioned in class. I'm not sure if it's completely correct or an approximation.
* I added inverted gravity to the spark particles so they rise up like embers.

Part Related to Compute Shader (Boids) (10.5 hr total):
* 4 hr modifying my program to allow for swarms of fireflies to be created and contribute to lighting.
* 1 hr adding cohesion and steering toward average heading (it's too cohesive at this point, converges to uniform flock too quickly)
* 1.5 hr messing with the settings trying and failing to get a chaotic swarm. It is still very cohesive. Maybe it would require different equations.
* * I also added a bounding box of sorts to prevent the fireflies from flying off-screen. It gently pulls them toward (0, 1.5, 0).
* * The swarm looks pretty lame. I will add some noise to the velocity at the very least. It should make the animation more interesting.
* * Change aversion to 0 if you want something more exciting that looks more like typical Boids.
* 3 hr fix bugs in boids algorithm and try to make the swarm behavior look nicer
* 1 hr fix aversion and fine-tune the firefly swarms to look really nice

### Description
I implemented the boids algorithm (probably with some of my own modifications since I didn't look up formulas) on a swarm of fireflies.  
The swarms evolve over time. Swarms form based on proximity. Fireflies shuffle around a little bit when there is an "impact" or joining of swarms due to aversion.  
Fireflies tend to move in the average direction of the local swarm, making the motion of the swarm uniform, with small variation when there are "collisions."  
Cohesion causes fireflies within a certain distance to be drawn close to one another. Cohesion makes the swarms more compact and allows multiple swarms to merge into larger swarms.  
As the swarms grow larger, they also tend to grow more spherical. This is due to the aversion property and the cohesion property working together.  
The fireflies emit spark particles, though these don't really contribute much to the scene. I thought about making the particles contribute lighting just like the fireflies do, but it might make the program too slow to have hundreds of point lights.  
The program uses compute shaders for both boids and for the spark particle locations. The shader storage arrays can then be converted into vertex arrays to use in render shaders.

## Interaction
Press the number 0 to reset the scene by placing the fireflies in random positions. This also resets the camera to the original view.
Press PG UP / PG DOWN or the square brackets [ ] to zoom in or out.  
Press +/- to add or remove patches of grass.  
Use arrow keys to make the camera orbit the scene.  
Press P to toggle projection mode (orthogonal or perspective).  


### Key bindings
  0          Reset the view
  p          Change projection mode
  arrows     Change view angle
  PgDn/PgUp  Zoom in and out
  ] and [    Zoom in and out
  +/-        Make the blade of grass go closer/further to the origin (originally changed the number of blades of grass in the lawn, but the program is only drawing one blade)
  0          Reset view angle
  ESC        Exit
